from typing import List

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        initial.sort()
        
        def dfs(node, color):
            colors[node] = color
            for nei, is_connected in enumerate(graph[node]):
                if is_connected and colors[nei] == -1:
                    dfs(nei, color)
        
        colors = [-1] * n
        color = 0
        for i in range(n):
            if colors[i] == -1:
                dfs(i, color)
                color += 1
        
        count = [0] * color
        for col in colors:
            count[col] += 1
        
        infected_count = [0] * color
        for i in initial:
            infected_count[colors[i]] += 1
        
        result = (-1, float('inf'))
        for i in initial:
            colors_i = colors[i]
            if infected_count[colors_i] == 1:
                if result[1] > infected_count[colors_i]:
                    result = (i, infected_count[colors_i])
            else:
                if result[1] >= count[colors_i]:
                    result = (i, count[colors_i])
        return result[0]
