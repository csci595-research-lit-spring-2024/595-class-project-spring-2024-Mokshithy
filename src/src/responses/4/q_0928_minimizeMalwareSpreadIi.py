from typing import List

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        def dfs(node, color):
            colors[node] = color
            for nei, adj in enumerate(graph[node]):
                if adj and colors[nei] == -1:
                    dfs(nei, color)
        
        n = len(graph)
        colors = [-1] * n
        component_size = [-1] * n
        for i in range(n):
            if colors[i] == -1:
                dfs(i, i)
        
        for col in colors:
            component_size[col] = component_size[col] + 1 if component_size[col] != -1 else 1
        
        infected_count = [0] * n
        for init in initial:
            infected_count[colors[init]] += 1
        
        result_node = min(initial)
        max_infected = 0
        for init in initial:
            if infected_count[colors[init]] == 1:
                if max_infected < component_size[colors[init]]:
                    max_infected = component_size[colors[init]]
                    result_node = init
        
        return result_node
