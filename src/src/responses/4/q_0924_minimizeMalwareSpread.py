from collections import deque

class Solution:
    def minMalwareSpread(self, graph, initial):
        def dfs(node):
            infected.add(node)
            for neigh, connected in enumerate(graph[node]):
                if connected and neigh not in infected:
                    dfs(neigh)

        n = len(graph)
        initial.sort()
        min_removed_node = initial[0]
        min_infected = float('inf')

        for removed_node in initial:
            infected = set()
            for node in initial:
                if node != removed_node:
                    dfs(node)

            if len(infected) < min_infected or (len(infected) == min_infected and removed_node < min_removed_node):
                min_removed_node = removed_node
                min_infected = len(infected)

        return min_removed_node
