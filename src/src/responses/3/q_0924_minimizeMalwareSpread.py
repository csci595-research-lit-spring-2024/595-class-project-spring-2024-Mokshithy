from collections import defaultdict

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        def dfs(node, malware):
            malware.add(node)
            for i in range(len(graph[node])):
                if graph[node][i] == 1 and i not in malware:
                    dfs(i, malware)
        
        n = len(graph)
        initial.sort()
        infected_count = defaultdict(int)
        for node in initial:
            malware = set()
            dfs(node, malware)
            for infected_node in malware:
                infected_count[infected_node] += 1
        
        min_removal = (float('inf'), -1)  # (count, node)
        for node in initial:
            count = infected_count[node]
            if count < min_removal[0] or (count == min_removal[0] and node < min_removal[1]):
                min_removal = (count, node)
        
        return min_removal[1]
