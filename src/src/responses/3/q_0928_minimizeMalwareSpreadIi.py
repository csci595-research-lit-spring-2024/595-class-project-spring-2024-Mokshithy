from typing import List

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        def dfs(node, color):
            colors[node] = color
            for nei, adj in enumerate(graph[node]):
                if adj and colors[nei] != color:
                    dfs(nei, color)

        n = len(graph)
        colors = [-1] * n
        next_color = 0
        for i in range(n):
            if colors[i] == -1:
                dfs(i, next_color)
                next_color += 1

        size = [0] * next_color
        for color in colors:
            size[color] += 1

        node_count = [0] * next_color
        for node in initial:
            node_count[colors[node]] += 1

        result = float('inf')
        min_count = float('inf')
        for node in initial:
            if node_count[colors[node]] == 1:
                if size[colors[node]] < min_count or (size[colors[node]] == min_count and node < result):
                    min_count = size[colors[node]]
                    result = node

        if result == float('inf'):
            return min(initial)

        return result